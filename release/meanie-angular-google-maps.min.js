"use strict";!function(e,o,n){o.module("Google.Maps.Api.Service",[]).factory("GoogleMapsApi",["$window",function(e){if(!e.google||!e.google.maps)throw new Error("Global `google` variable or `google.maps` missing.Make sure to include the relevant external Google script(s).");return e.google}])}(window,window.angular),function(e,o,n){o.module("Google.Maps.PlacesAutocomplete.Directive",["Google.Maps.Api.Service"]).directive("placesAutocomplete",["GoogleMapsApi",function(e){return{restrict:"A",scope:{geoLocation:"=",options:"=",onChange:"&"},controller:["$scope","$attrs","$element","$convert",function(e,o,n,t){e.options=e.options||{},e.placeChanged=function(n){o.onChange&&e.onChange({place:t.object.keysToCamelCase(n)})}}],link:function(n,t){function a(){var e=c.getPlace();e.inputValue=t[0].value,n.$apply(function(){n.placeChanged(e)})}var c=new e.maps.places.Autocomplete(t[0],n.options);if(n.geoLocation&&o.isObject(n.geoLocation)&&n.geoLocation.coords){var i=new e.maps.Circle({radius:n.geoLocation.coords.accuracy,center:new e.maps.LatLng(n.geoLocation.coords.latitude,n.geoLocation.coords.longitude)});c.setBounds(i.getBounds())}var r=e.maps.event.addListener(c,"place_changed",a);n.$on("$destroy",function(){e.maps.event.removeListener(r),e.maps.event.clearInstanceListeners(c);for(var o=document.getElementsByClassName("pac-container"),n=0;n<o.length;n++)o[n].parentNode.removeChild(o[n])})}}}])}(window,window.angular);
//# sourceMappingURL=meanie-angular-google-maps.min.js.map
