!function(e,o,n){"use strict";o.module("Google.Maps.Api.Service",[]).factory("GoogleMapsApi",["$window",function(e){if(!e.google||!e.google.maps)throw new Error("Global `google` variable or `google.maps` missing.Make sure to include the relevant external Google script(s).");return e.google}])}(window,window.angular),function(e,o,n){"use strict";o.module("Google.Maps.PlacesAutocomplete.Directive",["Google.Maps.Api.Service"]).directive("placesAutocomplete",["GoogleMapsApi","$timeout","$convert",function(e,n,t){return{restrict:"A",scope:{geoLocation:"=",options:"=",onChange:"&"},controller:["$scope","$attrs",function(e,o){e.options=e.options||{},e.placeChanged=function(n){o.onChange&&e.onChange({place:t.object.keysToCamelCase(n)})}}],link:function(t,a){var c=new e.maps.places.Autocomplete(a[0],t.options);if(t.geoLocation&&o.isObject(t.geoLocation)&&t.geoLocation.coords){var i=new e.maps.Circle({radius:t.geoLocation.coords.accuracy,center:new e.maps.LatLng(t.geoLocation.coords.latitude,t.geoLocation.coords.longitude)});c.setBounds(i.getBounds())}n(function(){return a.attr("autocomplete","goawaygoogle")},100);var r=e.maps.event.addListener(c,"place_changed",function(){var e=c.getPlace();e.inputValue=a[0].value,t.$apply(function(){t.placeChanged(e)})});t.$on("$destroy",function(){e.maps.event.removeListener(r),e.maps.event.clearInstanceListeners(c);for(var o=document.getElementsByClassName("pac-container"),n=0;n<o.length;n++)o[n].parentNode.removeChild(o[n])})}}}])}(window,window.angular);
//# sourceMappingURL=angular-google-maps.min.js.map
